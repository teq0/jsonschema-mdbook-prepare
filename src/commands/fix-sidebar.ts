import {Command, flags} from '@oclif/command'
import * as path from 'path';
import * as fs from 'fs';
import SidebarFixer from '../SidebarFixer';

export default class FixSidebar extends Command {
  static description = 'Updates the sidebar menu in html files generated by mdBook by reading it from an index.html file that has the desired menu and replacing the menu in the other files.'

  static flags = {
    version: flags.version({char: 'v'}),
    help: flags.help({char: 'h'}),

    sourcePath: flags.string({char: 's', description: 'path-to-source-folder', required: true}),
    destPath: flags.string({char: 'd', description: 'path-to-destination-folder', required: true})
  }

  static args = []

  async run() {
    const {args, flags} = this.parse(FixSidebar)

    if (!fs.existsSync(flags.sourcePath)) {
      console.error(`Source folder does not exist: ${flags.sourcePath}`);
      this.exit();
    }

    if (!fs.existsSync(flags.destPath)) {
      console.error(`Destination folder does not exist: ${flags.destPath}`);
      this.exit();
    }

    const fixer = new SidebarFixer(flags.sourcePath, flags.destPath);

    fixer.updateSidebars();
  }
}
